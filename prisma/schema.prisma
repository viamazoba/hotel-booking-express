// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id                   String                @id @default(cuid())
  hotel_name           String                @unique
  hotel_img            String
  description          String
  new_price            Int
  previous_price       Int?
  labels               String?
  phone                String
  hotel_rating         Stars
  check_in             DateTime              @default(now())
  check_out            DateTime              @default(now())
  rooms                Room[]
  Service_labels_hotel Service_label_hotel[]
  City                 City[]
}

model Room {
  id             String           @id @default(cuid())
  hotel          Hotel            @relation(fields: [hotelId], references: [id])
  hotelId        String
  room_name      String
  room_img       String
  new_price      Int
  previous_price Int?
  max_guests     Int?
  Inclusion_room Inclusion_room[]
  Amenity_room   Amenity_room[]
  Booked_room    Booked_room[]
}

model Inclusion_room {
  id          String    @id @default(cuid())
  room        Room      @relation(fields: [roomId], references: [id])
  roomId      String
  inclusion   Inclusion @relation(fields: [inclusionId], references: [id])
  inclusionId String
}

model Inclusion {
  id             String           @id @default(cuid())
  inclusion_name String           @unique
  Inclusion_room Inclusion_room[]
}

model Amenity_room {
  id        String  @id @default(cuid())
  room      Room    @relation(fields: [roomId], references: [id])
  roomId    String
  amenity   Amenity @relation(fields: [amenityId], references: [id])
  amenityId String
}

model Amenity {
  id           String         @id @default(cuid())
  amenity_name String         @unique
  Amenity_room Amenity_room[]
}

model User {
  id            String        @id @default(cuid())
  user_name     String?
  user_img      String?
  email         String        @unique
  phone         String?
  gender        Gender?
  birthday      String?
  address       String?
  password      String
  login_type    String?
  role          Role          @relation(fields: [roleId], references: [id])
  roleId        String
  city          City?         @relation(fields: [cityId], references: [id])
  cityId        String?
  booked_roomId String?
  Booked_room   Booked_room[]
}

model Role {
  id        String @id @default(cuid())
  role_name String
  user      User[]
}

model Booked_room {
  id        String   @id @default(cuid())
  guests    Int
  check_in  DateTime
  check_out DateTime
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  userId    String
  roomId    String
}

model City {
  id          String  @id @default(cuid())
  name_city   String
  postal_code String  @unique
  altitude    Float
  latitude    Float
  country     Country @relation(fields: [countryId], references: [id])
  countryId   String
  User        User[]
  hotel       Hotel   @relation(fields: [hotelId], references: [id])
  hotelId     String
}

model Country {
  id           String @id @default(cuid())
  country_name String
  City         City[]
}

model Service_label_hotel {
  id              String        @id @default(cuid())
  hotel           Hotel         @relation(fields: [hotelId], references: [id])
  hotelId         String
  label           Service_label @relation(fields: [service_labelId], references: [id])
  service_labelId String
}

model Service_label {
  id                  String                @id @default(cuid())
  service_label_name  String
  Service_label_hotel Service_label_hotel[]
}

enum Stars {
  one
  two
  three
  four
  five
}

enum Gender {
  man
  woman
  other
}
